// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_test_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_test_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_test_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_test_2eproto;
class basic_block;
struct basic_blockDefaultTypeInternal;
extern basic_blockDefaultTypeInternal _basic_block_default_instance_;
class mmio_addr_range;
struct mmio_addr_rangeDefaultTypeInternal;
extern mmio_addr_rangeDefaultTypeInternal _mmio_addr_range_default_instance_;
class mmio_input;
struct mmio_inputDefaultTypeInternal;
extern mmio_inputDefaultTypeInternal _mmio_input_default_instance_;
class mmio_output;
struct mmio_outputDefaultTypeInternal;
extern mmio_outputDefaultTypeInternal _mmio_output_default_instance_;
class req_msg;
struct req_msgDefaultTypeInternal;
extern req_msgDefaultTypeInternal _req_msg_default_instance_;
class rsp_msg;
struct rsp_msgDefaultTypeInternal;
extern rsp_msgDefaultTypeInternal _rsp_msg_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class rsp_msg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rsp_msg) */ {
 public:
  inline rsp_msg() : rsp_msg(nullptr) {}
  ~rsp_msg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR rsp_msg(::google::protobuf::internal::ConstantInitialized);

  inline rsp_msg(const rsp_msg& from)
      : rsp_msg(nullptr, from) {}
  rsp_msg(rsp_msg&& from) noexcept
    : rsp_msg() {
    *this = ::std::move(from);
  }

  inline rsp_msg& operator=(const rsp_msg& from) {
    CopyFrom(from);
    return *this;
  }
  inline rsp_msg& operator=(rsp_msg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const rsp_msg& default_instance() {
    return *internal_default_instance();
  }
  static inline const rsp_msg* internal_default_instance() {
    return reinterpret_cast<const rsp_msg*>(
               &_rsp_msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(rsp_msg& a, rsp_msg& b) {
    a.Swap(&b);
  }
  inline void Swap(rsp_msg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(rsp_msg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  rsp_msg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<rsp_msg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const rsp_msg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const rsp_msg& from) {
    rsp_msg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(rsp_msg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "rsp_msg";
  }
  protected:
  explicit rsp_msg(::google::protobuf::Arena* arena);
  rsp_msg(::google::protobuf::Arena* arena, const rsp_msg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspStatusFieldNumber = 1,
  };
  // int32 rsp_status = 1;
  void clear_rsp_status() ;
  ::int32_t rsp_status() const;
  void set_rsp_status(::int32_t value);

  private:
  ::int32_t _internal_rsp_status() const;
  void _internal_set_rsp_status(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:rsp_msg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t rsp_status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};// -------------------------------------------------------------------

class req_msg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:req_msg) */ {
 public:
  inline req_msg() : req_msg(nullptr) {}
  ~req_msg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR req_msg(::google::protobuf::internal::ConstantInitialized);

  inline req_msg(const req_msg& from)
      : req_msg(nullptr, from) {}
  req_msg(req_msg&& from) noexcept
    : req_msg() {
    *this = ::std::move(from);
  }

  inline req_msg& operator=(const req_msg& from) {
    CopyFrom(from);
    return *this;
  }
  inline req_msg& operator=(req_msg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const req_msg& default_instance() {
    return *internal_default_instance();
  }
  static inline const req_msg* internal_default_instance() {
    return reinterpret_cast<const req_msg*>(
               &_req_msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(req_msg& a, req_msg& b) {
    a.Swap(&b);
  }
  inline void Swap(req_msg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(req_msg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  req_msg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<req_msg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const req_msg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const req_msg& from) {
    req_msg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(req_msg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "req_msg";
  }
  protected:
  explicit req_msg(::google::protobuf::Arena* arena);
  req_msg(::google::protobuf::Arena* arena, const req_msg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqCommandFieldNumber = 1,
  };
  // string req_command = 1;
  void clear_req_command() ;
  const std::string& req_command() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_req_command(Arg_&& arg, Args_... args);
  std::string* mutable_req_command();
  PROTOBUF_NODISCARD std::string* release_req_command();
  void set_allocated_req_command(std::string* value);

  private:
  const std::string& _internal_req_command() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_req_command(
      const std::string& value);
  std::string* _internal_mutable_req_command();

  public:
  // @@protoc_insertion_point(class_scope:req_msg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      27, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr req_command_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};// -------------------------------------------------------------------

class mmio_output final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mmio_output) */ {
 public:
  inline mmio_output() : mmio_output(nullptr) {}
  ~mmio_output() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR mmio_output(::google::protobuf::internal::ConstantInitialized);

  inline mmio_output(const mmio_output& from)
      : mmio_output(nullptr, from) {}
  mmio_output(mmio_output&& from) noexcept
    : mmio_output() {
    *this = ::std::move(from);
  }

  inline mmio_output& operator=(const mmio_output& from) {
    CopyFrom(from);
    return *this;
  }
  inline mmio_output& operator=(mmio_output&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const mmio_output& default_instance() {
    return *internal_default_instance();
  }
  static inline const mmio_output* internal_default_instance() {
    return reinterpret_cast<const mmio_output*>(
               &_mmio_output_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(mmio_output& a, mmio_output& b) {
    a.Swap(&b);
  }
  inline void Swap(mmio_output* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(mmio_output* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  mmio_output* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<mmio_output>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const mmio_output& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const mmio_output& from) {
    mmio_output::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(mmio_output* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mmio_output";
  }
  protected:
  explicit mmio_output(::google::protobuf::Arena* arena);
  mmio_output(::google::protobuf::Arena* arena, const mmio_output& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kAddrFieldNumber = 2,
  };
  // bytes value = 1;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // int64 addr = 2;
  void clear_addr() ;
  ::int64_t addr() const;
  void set_addr(::int64_t value);

  private:
  ::int64_t _internal_addr() const;
  void _internal_set_addr(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:mmio_output)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::int64_t addr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};// -------------------------------------------------------------------

class mmio_input final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mmio_input) */ {
 public:
  inline mmio_input() : mmio_input(nullptr) {}
  ~mmio_input() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR mmio_input(::google::protobuf::internal::ConstantInitialized);

  inline mmio_input(const mmio_input& from)
      : mmio_input(nullptr, from) {}
  mmio_input(mmio_input&& from) noexcept
    : mmio_input() {
    *this = ::std::move(from);
  }

  inline mmio_input& operator=(const mmio_input& from) {
    CopyFrom(from);
    return *this;
  }
  inline mmio_input& operator=(mmio_input&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const mmio_input& default_instance() {
    return *internal_default_instance();
  }
  static inline const mmio_input* internal_default_instance() {
    return reinterpret_cast<const mmio_input*>(
               &_mmio_input_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(mmio_input& a, mmio_input& b) {
    a.Swap(&b);
  }
  inline void Swap(mmio_input* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(mmio_input* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  mmio_input* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<mmio_input>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const mmio_input& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const mmio_input& from) {
    mmio_input::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(mmio_input* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mmio_input";
  }
  protected:
  explicit mmio_input(::google::protobuf::Arena* arena);
  mmio_input(::google::protobuf::Arena* arena, const mmio_input& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kLengthFieldNumber = 2,
  };
  // bytes value = 1;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // int32 length = 2;
  void clear_length() ;
  ::int32_t length() const;
  void set_length(::int32_t value);

  private:
  ::int32_t _internal_length() const;
  void _internal_set_length(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mmio_input)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::int32_t length_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};// -------------------------------------------------------------------

class mmio_addr_range final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mmio_addr_range) */ {
 public:
  inline mmio_addr_range() : mmio_addr_range(nullptr) {}
  ~mmio_addr_range() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR mmio_addr_range(::google::protobuf::internal::ConstantInitialized);

  inline mmio_addr_range(const mmio_addr_range& from)
      : mmio_addr_range(nullptr, from) {}
  mmio_addr_range(mmio_addr_range&& from) noexcept
    : mmio_addr_range() {
    *this = ::std::move(from);
  }

  inline mmio_addr_range& operator=(const mmio_addr_range& from) {
    CopyFrom(from);
    return *this;
  }
  inline mmio_addr_range& operator=(mmio_addr_range&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const mmio_addr_range& default_instance() {
    return *internal_default_instance();
  }
  static inline const mmio_addr_range* internal_default_instance() {
    return reinterpret_cast<const mmio_addr_range*>(
               &_mmio_addr_range_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(mmio_addr_range& a, mmio_addr_range& b) {
    a.Swap(&b);
  }
  inline void Swap(mmio_addr_range* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(mmio_addr_range* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  mmio_addr_range* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<mmio_addr_range>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const mmio_addr_range& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const mmio_addr_range& from) {
    mmio_addr_range::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(mmio_addr_range* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mmio_addr_range";
  }
  protected:
  explicit mmio_addr_range(::google::protobuf::Arena* arena);
  mmio_addr_range(::google::protobuf::Arena* arena, const mmio_addr_range& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLoAddrFieldNumber = 1,
    kHiAddrFieldNumber = 2,
  };
  // int64 lo_addr = 1;
  void clear_lo_addr() ;
  ::int64_t lo_addr() const;
  void set_lo_addr(::int64_t value);

  private:
  ::int64_t _internal_lo_addr() const;
  void _internal_set_lo_addr(::int64_t value);

  public:
  // int64 hi_addr = 2;
  void clear_hi_addr() ;
  ::int64_t hi_addr() const;
  void set_hi_addr(::int64_t value);

  private:
  ::int64_t _internal_hi_addr() const;
  void _internal_set_hi_addr(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:mmio_addr_range)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t lo_addr_;
    ::int64_t hi_addr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};// -------------------------------------------------------------------

class basic_block final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:basic_block) */ {
 public:
  inline basic_block() : basic_block(nullptr) {}
  ~basic_block() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR basic_block(::google::protobuf::internal::ConstantInitialized);

  inline basic_block(const basic_block& from)
      : basic_block(nullptr, from) {}
  basic_block(basic_block&& from) noexcept
    : basic_block() {
    *this = ::std::move(from);
  }

  inline basic_block& operator=(const basic_block& from) {
    CopyFrom(from);
    return *this;
  }
  inline basic_block& operator=(basic_block&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const basic_block& default_instance() {
    return *internal_default_instance();
  }
  static inline const basic_block* internal_default_instance() {
    return reinterpret_cast<const basic_block*>(
               &_basic_block_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(basic_block& a, basic_block& b) {
    a.Swap(&b);
  }
  inline void Swap(basic_block* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(basic_block* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  basic_block* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<basic_block>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const basic_block& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const basic_block& from) {
    basic_block::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(basic_block* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "basic_block";
  }
  protected:
  explicit basic_block(::google::protobuf::Arena* arena);
  basic_block(::google::protobuf::Arena* arena, const basic_block& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPcFieldNumber = 1,
  };
  // bytes pc = 1;
  void clear_pc() ;
  const std::string& pc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pc(Arg_&& arg, Args_... args);
  std::string* mutable_pc();
  PROTOBUF_NODISCARD std::string* release_pc();
  void set_allocated_pc(std::string* value);

  private:
  const std::string& _internal_pc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pc(
      const std::string& value);
  std::string* _internal_mutable_pc();

  public:
  // @@protoc_insertion_point(class_scope:basic_block)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr pc_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// req_msg

// string req_command = 1;
inline void req_msg::clear_req_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.req_command_.ClearToEmpty();
}
inline const std::string& req_msg::req_command() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:req_msg.req_command)
  return _internal_req_command();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void req_msg::set_req_command(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.req_command_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:req_msg.req_command)
}
inline std::string* req_msg::mutable_req_command() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_req_command();
  // @@protoc_insertion_point(field_mutable:req_msg.req_command)
  return _s;
}
inline const std::string& req_msg::_internal_req_command() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.req_command_.Get();
}
inline void req_msg::_internal_set_req_command(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.req_command_.Set(value, GetArena());
}
inline std::string* req_msg::_internal_mutable_req_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.req_command_.Mutable( GetArena());
}
inline std::string* req_msg::release_req_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:req_msg.req_command)
  return _impl_.req_command_.Release();
}
inline void req_msg::set_allocated_req_command(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.req_command_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.req_command_.IsDefault()) {
          _impl_.req_command_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:req_msg.req_command)
}

// -------------------------------------------------------------------

// rsp_msg

// int32 rsp_status = 1;
inline void rsp_msg::clear_rsp_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rsp_status_ = 0;
}
inline ::int32_t rsp_msg::rsp_status() const {
  // @@protoc_insertion_point(field_get:rsp_msg.rsp_status)
  return _internal_rsp_status();
}
inline void rsp_msg::set_rsp_status(::int32_t value) {
  _internal_set_rsp_status(value);
  // @@protoc_insertion_point(field_set:rsp_msg.rsp_status)
}
inline ::int32_t rsp_msg::_internal_rsp_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rsp_status_;
}
inline void rsp_msg::_internal_set_rsp_status(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rsp_status_ = value;
}

// -------------------------------------------------------------------

// mmio_input

// bytes value = 1;
inline void mmio_input::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& mmio_input::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mmio_input.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void mmio_input::set_value(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mmio_input.value)
}
inline std::string* mmio_input::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:mmio_input.value)
  return _s;
}
inline const std::string& mmio_input::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_.Get();
}
inline void mmio_input::_internal_set_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* mmio_input::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* mmio_input::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mmio_input.value)
  return _impl_.value_.Release();
}
inline void mmio_input::set_allocated_value(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mmio_input.value)
}

// int32 length = 2;
inline void mmio_input::clear_length() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.length_ = 0;
}
inline ::int32_t mmio_input::length() const {
  // @@protoc_insertion_point(field_get:mmio_input.length)
  return _internal_length();
}
inline void mmio_input::set_length(::int32_t value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:mmio_input.length)
}
inline ::int32_t mmio_input::_internal_length() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.length_;
}
inline void mmio_input::_internal_set_length(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.length_ = value;
}

// -------------------------------------------------------------------

// mmio_output

// bytes value = 1;
inline void mmio_output::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& mmio_output::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mmio_output.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void mmio_output::set_value(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:mmio_output.value)
}
inline std::string* mmio_output::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:mmio_output.value)
  return _s;
}
inline const std::string& mmio_output::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_.Get();
}
inline void mmio_output::_internal_set_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* mmio_output::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* mmio_output::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:mmio_output.value)
  return _impl_.value_.Release();
}
inline void mmio_output::set_allocated_value(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:mmio_output.value)
}

// int64 addr = 2;
inline void mmio_output::clear_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.addr_ = ::int64_t{0};
}
inline ::int64_t mmio_output::addr() const {
  // @@protoc_insertion_point(field_get:mmio_output.addr)
  return _internal_addr();
}
inline void mmio_output::set_addr(::int64_t value) {
  _internal_set_addr(value);
  // @@protoc_insertion_point(field_set:mmio_output.addr)
}
inline ::int64_t mmio_output::_internal_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addr_;
}
inline void mmio_output::_internal_set_addr(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.addr_ = value;
}

// -------------------------------------------------------------------

// basic_block

// bytes pc = 1;
inline void basic_block::clear_pc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pc_.ClearToEmpty();
}
inline const std::string& basic_block::pc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:basic_block.pc)
  return _internal_pc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void basic_block::set_pc(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pc_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:basic_block.pc)
}
inline std::string* basic_block::mutable_pc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pc();
  // @@protoc_insertion_point(field_mutable:basic_block.pc)
  return _s;
}
inline const std::string& basic_block::_internal_pc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pc_.Get();
}
inline void basic_block::_internal_set_pc(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pc_.Set(value, GetArena());
}
inline std::string* basic_block::_internal_mutable_pc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pc_.Mutable( GetArena());
}
inline std::string* basic_block::release_pc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:basic_block.pc)
  return _impl_.pc_.Release();
}
inline void basic_block::set_allocated_pc(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pc_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pc_.IsDefault()) {
          _impl_.pc_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:basic_block.pc)
}

// -------------------------------------------------------------------

// mmio_addr_range

// int64 lo_addr = 1;
inline void mmio_addr_range::clear_lo_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lo_addr_ = ::int64_t{0};
}
inline ::int64_t mmio_addr_range::lo_addr() const {
  // @@protoc_insertion_point(field_get:mmio_addr_range.lo_addr)
  return _internal_lo_addr();
}
inline void mmio_addr_range::set_lo_addr(::int64_t value) {
  _internal_set_lo_addr(value);
  // @@protoc_insertion_point(field_set:mmio_addr_range.lo_addr)
}
inline ::int64_t mmio_addr_range::_internal_lo_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lo_addr_;
}
inline void mmio_addr_range::_internal_set_lo_addr(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lo_addr_ = value;
}

// int64 hi_addr = 2;
inline void mmio_addr_range::clear_hi_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.hi_addr_ = ::int64_t{0};
}
inline ::int64_t mmio_addr_range::hi_addr() const {
  // @@protoc_insertion_point(field_get:mmio_addr_range.hi_addr)
  return _internal_hi_addr();
}
inline void mmio_addr_range::set_hi_addr(::int64_t value) {
  _internal_set_hi_addr(value);
  // @@protoc_insertion_point(field_set:mmio_addr_range.hi_addr)
}
inline ::int64_t mmio_addr_range::_internal_hi_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.hi_addr_;
}
inline void mmio_addr_range::_internal_set_hi_addr(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.hi_addr_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_test_2eproto_2epb_2eh
